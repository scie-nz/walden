---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-config
  namespace: walden
data:
  config.properties.template: |
{{ .Files.Get "configs/trino_config.properties.template" | indent 4 }}
  postgres.properties: |
{{ .Files.Get "configs/trino_postgres.properties" | indent 4 }}
  jvm.config: |
{{ .Files.Get "configs/trino_jvm.config" | indent 4 }}
  log.properties: |
{{ .Files.Get "configs/trino_log.properties" | indent 4 }}
  node.properties.template: |
{{ .Files.Get "configs/trino_node.properties.template" | indent 4 }}
  password-authenticator.properties: |
{{ .Files.Get "configs/trino_password-authenticator.properties" | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-catalog
  namespace: walden
data:
  core-site.xml: |
{{ .Files.Get "configs/trino_core-site.xml" | indent 4 }}
  hive.properties: |
{{ .Files.Get "configs/trino_hive.properties" | indent 4 }}
  tpch.properties: |
    connector.name=tpch
---
apiVersion: v1
kind: Service
metadata:
  name: trino
  namespace: walden
  labels:
    app: trino-coordinator
spec:
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app: trino-coordinator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: trino-coordinator
  name: trino-coordinator
  namespace: walden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trino-coordinator
  template:
    metadata:
      labels:
        app: trino-coordinator
    spec:
      nodeSelector:
        # We only build an amd64 trino image
        kubernetes.io/arch: amd64
      initContainers:
      - name: copy-configs
        # Use walden-trino image, rather than busybox, to have access to htpasswd command
        image: {{ .Values.walden_docker_org }}/walden-trino:{{ .Values.walden_trino_tag }}
        command:
        - /bin/sh
        - -c
        # TODO We currently generate a credentials file as an example.
        #      Trino requires that SSL be enabled before credentials will be used.
        - |
          cp -v /conf/* /etc-out/ &&
          mkdir -p /etc-out/catalog &&
          cp -v /catalog/* /etc-out/catalog &&
          sed -i "s/__MINIO_ACCESS_KEY_ID/$MINIO_ACCESS_KEY_ID/g" /etc-out/catalog/* &&
          sed -i "s/__MINIO_ACCESS_KEY_SECRET/$MINIO_ACCESS_KEY_SECRET/g" /etc-out/catalog/* &&
          htpasswd -c -b -B -C 10 /etc-out/password.db "$TRINO_USER" "$TRINO_PASSWORD"
        env:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-root
              key: user
        - name: MINIO_ACCESS_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: minio-root
              key: pass
        - name: TRINO_USER
          valueFrom:
            secretKeyRef:
              name: trino-admin
              key: user
        - name: TRINO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trino-admin
              key: pass
        volumeMounts:
        - name: config
          mountPath: /conf
        - name: catalog
          mountPath: /catalog
        - name: etc
          mountPath: /etc-out
      containers:
      - name: trino-coordinator
        image: {{ .Values.walden_docker_org }}/walden-trino:{{ .Values.walden_trino_tag }}
        env:
        - name: HIVE_METASTORE_HOST
          value: metastore
        - name: HIVE_METASTORE_PORT
          value: "9083"
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: etc
          mountPath: /trino-server/etc
      volumes:
      - name: config
        configMap:
          name: trino-config
      - name: catalog
        configMap:
          name: trino-catalog
      - name: etc
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: trino-worker
  name: trino-worker
  namespace: walden
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trino-worker
  template:
    metadata:
      labels:
        app: trino-worker
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: copy-configs
        image: busybox
        command:
        - sh
        - -c
        - |
          cp -v /conf/* /etc-out/ &&
          mkdir -p /etc-out/catalog &&
          cp -v /catalog/* /etc-out/catalog &&
          sed -i "s/__MINIO_ACCESS_KEY_ID/$MINIO_ACCESS_KEY_ID/g" /etc-out/catalog/* &&
          sed -i "s/__MINIO_ACCESS_KEY_SECRET/$MINIO_ACCESS_KEY_SECRET/g" /etc-out/catalog/*
        env:
        - name: MINIO_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: minio-root
              key: user
        - name: MINIO_ACCESS_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: minio-root
              key: pass
        volumeMounts:
        - name: config
          mountPath: /conf
        - name: catalog
          mountPath: /catalog
        - name: etc
          mountPath: /etc-out
      containers:
      - name: trino-worker
        image: {{ .Values.walden_docker_org }}/walden-trino:{{ .Values.walden_trino_tag }}
        env:
        - name: HIVE_METASTORE_HOST
          value: metastore
        - name: HIVE_METASTORE_PORT
          value: "9083"
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: etc
          mountPath: /trino-server/etc
      volumes:
      - name: config
        configMap:
          name: trino-config
      - name: catalog
        configMap:
          name: trino-catalog
      - name: etc
        emptyDir: {}
