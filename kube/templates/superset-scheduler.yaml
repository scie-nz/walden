apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-scheduler
  namespace: walden
  labels:
    app: superset-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-scheduler
  template:
    metadata:
      labels:
        app: superset-scheduler
    spec:
      nodeSelector:
        # We only build an amd64 superset image
        kubernetes.io/arch: amd64
{{- if .Values.node.selector.superset_worker }}
{{ toYaml .Values.node.selector.superset_worker | indent 8 }}
{{- end }}
{{- if .Values.node.toleration.superset_worker }}
      tolerations:
{{ toYaml .Values.node.toleration.superset_worker | indent 8 }}
{{- end }}
      initContainers:

      - name: init-config
        image: {{ .Values.image.busybox }}
        command:
        - /bin/sh
        - /ro/superset_copy_configs.sh
        volumeMounts:
        - name: config
          mountPath: /out
        - name: config-ro
          mountPath: /ro
          readOnly: true
        - name: config-custom
          mountPath: /custom
          readOnly: true
        - name: secrets-custom
          mountPath: /secrets
          readOnly: true

      - name: wait-for-postgres
        image: {{ .Values.image.busybox }}
        command:
        - /bin/sh
        - -c
        - 'until nc -zv $POSTGRES_HOST $POSTGRES_PORT -w1; do echo waiting for postgres: ${POSTGRES_HOST}:${POSTGRES_PORT}; sleep 1; done'
        env:
        - name: POSTGRES_HOST
          value: {{ .Values.superset.postgres.host }}
        - name: POSTGRES_PORT
          value: {{ .Values.superset.postgres.port | quote }}

      containers:

      - name: superset
        image: {{ .Values.image.superset }}
        command:
        - celery
        # Disable trying to create /app/celerybeat.pid (dir permissions issue)
        - --pidfile=
        - --schedule=/tmp/celerybeat-schedule
        - --app=superset.tasks.celery_app:app
        - beat
        env:
        # Celery app invokes superset_config.py
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: superset-key
              key: secret_key
        - name: REDIS_HOST
          value: superset-redis
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: superset-redis
              key: pass
        - name: POSTGRES_HOST
          value: {{ .Values.superset.postgres.host }}
        - name: POSTGRES_PORT
          value: {{ .Values.superset.postgres.port | quote }}
        - name: POSTGRES_DB
          value: {{ .Values.superset.postgres.db }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: superset-postgres
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: superset-postgres
              key: pass
        # Custom envvars for e.g. templated credentials in custom superset config
        {{- range .Values.superset.custom_env }}
        - {{ . | toJson }}
        {{- end }}
        resources:
          limits:
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /app/pythonpath
          readOnly: true
      volumes:
      - name: config
        emptyDir: {}
      - name: config-ro
        configMap:
          name: superset
      - name: config-custom
        configMap:
          name: superset-custom
          optional: true
      - name: secrets-custom
        secret:
          secretName: superset-custom
          optional: true
