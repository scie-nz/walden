{{- if .Values.alluxio.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: alluxio-config
  labels:
    app: alluxio
data:
  # Only specific "${...}" envvar names are supported, see list here:
  #   https://github.com/Alluxio/alluxio/blob/master/docs/_data/table/en/env_vars.yml
  # We preconfigure Alluxio to allow easy access to Minio.
  # The user can also configure Alluxio to mount something else too.
  #
  # Note that we also go to a lot of trouble to disable Alluxio's own ACLs here.
  # By default, Alluxio uses the LOCAL USERNAME for authentication, and this won't match the permissions of /.
  # So we configure all access to use the 'alluxio' user, and set umask=000 so that directories=777 and files=666.
  #
  # User settings are automatically passed to clients to be used as their defaults:
  # - alluxio.user.file.writetype.default=ASYNC_THROUGH (allow async acks of writes)
  # - alluxio.user.file.persistence.initial.wait.time=5s (allow up to 5s for things to flush)
  # - alluxio.user.file.persist.on.rename=true (when a rename occurs, assume that it's a "commit" from a temp path)
  # - alluxio.master.persistence.blacklist=hive-staging (never persist files in the configured hive-staging path)
  # - alluxio.user.block.size.block.size=8MB (down from 64MB since files are often much smaller anyway)
  ALLUXIO_JAVA_OPTS: -Dalluxio.master.hostname=alluxio -Dalluxio.master.journal.type=UFS -Dalluxio.master.journal.folder=/opt/alluxio/journal -Draft.server.storage.dir=/opt/alluxio/journal/JobJournal/raft -Dalluxio.security.stale.channel.purge.interval=365d -Dalluxio.master.mount.table.root.ufs=${ALLUXIO_MASTER_MOUNT_TABLE_ROOT_UFS} -Dalluxio.master.mount.table.root.shared=true -Dalluxio.underfs.s3.endpoint=http://minio:9000/ -Dalluxio.underfs.s3.disable.dns.buckets=true -Dalluxio.underfs.s3.inherit.acl=false -Dalluxio.underfs.s3.default.mode=0777 -Dalluxio.security.login.username=alluxio -Dalluxio.security.authorization.permission.umask=000 -Dalluxio.user.file.writetype.default=ASYNC_THROUGH -Dalluxio.user.file.persistence.initial.wait.time=5s -Dalluxio.user.file.persist.on.rename=true -Dalluxio.master.persistence.blacklist=hive-staging -Dalluxio.user.block.size.bytes.default=8MB
  ALLUXIO_MASTER_JAVA_OPTS: -Dalluxio.master.hostname=${ALLUXIO_MASTER_HOSTNAME}
  ALLUXIO_JOB_MASTER_JAVA_OPTS: -Dalluxio.master.hostname=${ALLUXIO_MASTER_HOSTNAME}
  ALLUXIO_WORKER_JAVA_OPTS: -Dalluxio.worker.hostname=${ALLUXIO_WORKER_HOSTNAME} -Dalluxio.worker.rpc.port=29999 -Dalluxio.worker.web.port=30000 -Dalluxio.worker.data.server.domain.socket.address=/opt/domain -Dalluxio.worker.data.server.domain.socket.as.uuid=true -Dalluxio.worker.container.hostname=${ALLUXIO_WORKER_CONTAINER_HOSTNAME} -Dalluxio.worker.ramdisk.size={{ .Values.alluxio.mem_cache }} -Dalluxio.worker.tieredstore.levels=2 -Dalluxio.worker.tieredstore.level0.alias=MEM -Dalluxio.worker.tieredstore.level0.dirs.path=/dev/shm -Dalluxio.worker.tieredstore.level1.alias=SSD -Dalluxio.worker.tieredstore.level1.dirs.mediumtype=SSD -Dalluxio.worker.tieredstore.level1.dirs.path=/mnt/cache -Dalluxio.worker.tieredstore.level1.dirs.quota={{ .Values.alluxio.disk_cache }}
  ALLUXIO_JOB_WORKER_JAVA_OPTS: -Dalluxio.worker.hostname=${ALLUXIO_WORKER_HOSTNAME} -Dalluxio.job.worker.rpc.port=30001 -Dalluxio.job.worker.data.port=30002 -Dalluxio.job.worker.web.port=30003
  ALLUXIO_FUSE_JAVA_OPTS: -Dalluxio.user.hostname=${ALLUXIO_CLIENT_HOSTNAME} -XX:MaxDirectMemorySize=2g
  ALLUXIO_WORKER_TIEREDSTORE_LEVEL0_DIRS_PATH: /dev/shm
  ALLUXIO_WORKER_TIEREDSTORE_LEVEL1_DIRS_PATH: /mnt/cache
{{- end }} # end of large alluxio.enabled block
